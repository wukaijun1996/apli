
pip install flask  写项目的框架

pip install flask-script   扩展插件  已指令的形式启动项目或者操作数据库

python manage.py runserver 运行服务



模板 template  html文件

模板中的语法

块语法
    {% %}  -- 声明变量
    {{ }} -- 在模板中呈现某个表达式的数据
    {# #}     注释

控制语句
if
{% if 条件表达式 %}
    满足条件表达式写的操作
{% endif %}

双分支
{% if 条件表达式 %}
    满足条件表达式写的操作
{% else %}
    不满足条件表达式写的操作
{% endif %}

多分支
{% if 条件表达式 %}
    满足条件表达式写的操作
{% elif  条件表达式1 %}
    满足条件表达式1的操作
{% elif  条件表达式2 %}
    满足条件表达式2的操作
{% else %}
    不满足条件表达式执行的操作
{% endif %}


for --循环语法

{% for 变量名 in 序列 %}
    循环操作
{% endfor %}

mysql -u root -p
ps  123456
开启： net start MySql2021
关闭：net stop MySql2021
create database book_1 charset utf8;   #创建数据库
use book_1   #用到哪一个数据库
show tables;  #用到哪一个表
desc peopleinfo;  #表的详细信息
select * from bookinfo;  查看表里面的数据

ORM 对象关系映射

pymysql 用来连接数据库
flask-sqlalchemy  支持允许进行对象关系映射
flask-migration  数据库迁移  结构发生变化，及时同步到数据库中
flask-wtf 跨站请求伪造保护

pip install mysqlclient


迁移数据库的指令
python 项目的启动文件名 设置的操作数据库迁移的指令名 init  --初始化一个迁移仓库 用于存放每次修改的版本

eg:
python manage2.py database init

python manage2.py database migrate   -- 根据模型生成迁移版本
python manage2.py database upgrade   --把模型同步到数据库中
（数据库更新时执行以上两条，记得注释upgrade里面删其他库的操作 ）

python manage2.py database downgrade    --版本回退



模板继承

写页面的时候  把相同的部分放在同一个模板文件中  需要时可以继承自这个模板

子模板中有扩展怎么扩展：
需要在父模板中设置 对应的可填充的位置

{# 设置可填充的位置 #}
{#  {% block 位置名 %} {% endblock %} #}
{% block body %} {% endblock %}







